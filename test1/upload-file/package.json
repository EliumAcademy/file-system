{
  "name": "upload-file",
  "version": "1.0.1",
  "description": "Simplified file upload",
  "main": "upload.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/douzi8/upload-file.git"
  },
  "author": {
    "name": "douzi",
    "email": "liaowei08@gmail.com"
  },
  "license": "ISC",
  "keywords": [
    "upload",
    "uploads",
    "file",
    "file upload",
    "multipart"
  ],
  "bugs": {
    "url": "https://github.com/douzi8/upload-file/issues"
  },
  "homepage": "https://github.com/douzi8/upload-file",
  "devDependencies": {
    "express": "^4.11.0",
    "grunt": "^0.4.5",
    "grunt-contrib-jshint": "^0.10.0",
    "jade": "^1.9.0",
    "serve-static": "^1.8.1"
  },
  "dependencies": {
    "file-system": "^2.0.0",
    "streamsearch": "^0.1.2",
    "utils-extend": "^1.0.7"
  },
  "readme": "upload-file - Simplified file upload\n===========\n\nSome options is borrowed from [jquery.upload](https://github.com/blueimp/jQuery-File-Upload)\n\n```js\nvar Upload = require('upload-file');\n```\n\n### express demo\n```js\napp.post('/upload', function(req, res) {\n  var upload = new Upload({\n    headers: req.headers,\n    dest: 'dest/path',\n    maxFileSize: 100 * 1024,\n    rename: function(filename) {\n      return filename;\n    },\n    done: function(err, files) {\n      console.log(files);\n      res.send(err || 'File uploaded successfully.');\n    }\n  });\n\n  req.pipe(upload);\n});\n```\n\n## API\n### constructor\n* {object} ``headers`` required  \n  The request headers\n* {string} ``dest`` required  \n  Upload path\n* {RegExp} ``acceptFileTypes``  \n  The regular expression for allowed file types, matches against either file type or file name\n* {number} ``[maxNumberOfFiles=Infinity]``\n  The limit of files to be uploaded\n* {number} ``[maxFileSize=Infinity]``  \n  The maximum allowed file size in bytes\n* {number} ``[minFileSize=0]``  \n  The minimum allowed file size in bytes\n* {object} ``messages``  \n  Error and info messages\n  * message.maxNumberOfFiles\n  * message.acceptFileTypes\n  * message.maxFileSize\n  * message.minFileSize\n  * message.fileWriteFailed\n  * message.invalidRequest\n* {function} ``[done=noop]``\n  The callback for upload\n\n## How to run upload demo\n 1. cd ``upload-file`` modules path\n 1. node express.js",
  "readmeFilename": "README.md",
  "gitHead": "8bb69f2e7bae0d560f2ae93cdc730ab5c9e19835",
  "_id": "upload-file@1.0.1",
  "_shasum": "8ba821a77b699597a5632cebf62b60aef13521c9",
  "_from": "upload-file@"
}
333